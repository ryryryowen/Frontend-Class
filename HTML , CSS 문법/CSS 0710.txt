*CSS3 = > 레벨로 업그레이드 !!!

- animation / transtion / transform
- flex / grid
> 기존 css 로는 float / margin / padding / table = > 레이아웃 정렬을 함
/ = > 레이아웃 정렬 전용 속성 !!! 
> 크로스 브라우징 

flex 의 문법  이 3가지 !!!!

1) 부모 (컨테이너 박스)
> display : flex
> justify-content = > 중심축을 기준 정렬 : 수평정렬

*단일 아이템!!!
- center : 아이템을 전체 너비의 정가운데
- flex-start : 플렉스가 시작되어지는 지점을 기준으로 정렬
(*웹 모든 그래픽요소 : 좌 = > 우) = > 왼쪽 정렬
- flex-end : 우측정렬

*복수 아이템!!!
- space-between
- space-around
- space-evenly

> align-items = >교차축을 기준으로 정렬 : 수직정렬
- center
- flex-start
- flex - end
- stretch : 자식요소의 높이값을 별도로 지정하지 않는경우, 부모요소의
높이를 자동으로 상속받는 기능 

> flex-direction = > 중심축 / 교차축을 무엇으로 할 것인가?
(*defalt = > row / column)
>  row(왼쪽부터)  // row-reverse(오른쪽부터)
 = >  겉으로 얼핏보면 flex-end & row-reverse가 매우 비슷하게 보이나 
엄밀히 다른 기능 !! 

>column ( 상단부터) // column-reverse (하단부터)
 = > 겉으로 얼핏보면 &  flex-end & column-reverse

> flex-wrap = >  default = > " no-wrap " = > 자식 요소의 너비 
보장 x  100px

*flex-wrap & flex-direction 하나로 통합해서 작성!!!
> flex-flow

> align-contents = >  자식요소들이 여러개의 행으로 구분이 되어졌을 때
 어느 방향으로 모든 자식요소들의 수직정렬을 결정

-center
- flex- start
- flex - end
- space-between
- space - around
- space - evenly


2) 자식 (* 플렉스 레이아웃 시스템 문법 적용)
> flex-grow : 자식요소들의 너비의 비율을 결정!!!
> flex-shrink : 자식요소들의 너비가 줄어들 때의 비율을 결정
> flex-basis : 자식요소들에게 고정 너비값을 부여 !!!
= > flex :  flex-grow -flex-shrink -flex-basis
> flex : flex-grow flex-shrink flex-basis
> order : 자식요소들의 포지션 위치 순서 결정 !!! = > 옵션!!!
> flex : 

3) 중심축 / 교차축
- 중심축 default = > 가로 row
- 교차축 default = > 세로 column

*특정 아이템 위치를 조정
> transfrom > translate (*x, y좌표)

*margin / padding
> 특정 도형 및 요소의 위치를 조정
> target 하고 있는 도형 및 요소 주변 환경을 활용해서 위치 정렬

1) 결과값 도출 : 1가지 정답x

2) position : absolute 남발x 
-
-  display : flex (*자주 애용 / ) 남발은 x 